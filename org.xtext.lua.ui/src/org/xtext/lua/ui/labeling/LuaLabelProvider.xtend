/*
 * generated by Xtext 2.28.0
 */
package org.xtext.lua.ui.labeling

import com.google.inject.Inject
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.naming.IQualifiedNameProvider
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider
import org.xtext.lua.lua.Referenceable
import org.xtext.lua.lua.Expression_Import

/** 
 * Provides labels for EObjects.
 * See
 * https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#label-provider
 */
class LuaLabelProvider extends DefaultEObjectLabelProvider {
	@Inject IQualifiedNameProvider qualifiedNameProvider
	@Inject new(AdapterFactoryLabelProvider delegate) {
		super(delegate)
	}

	// Labels and icons can be computed like this:
	def package String text(EObject obj) {
		val clsName = obj.eClass().name

		if (obj instanceof Referenceable) {
			var fqn = qualifiedNameProvider.apply(obj)
			if (fqn !== null) {
				return String.format('%s "%s"', clsName, fqn)
			}
		} else if (obj instanceof Expression_Import) {
			return String.format('%s "%s"', clsName, obj.importURI)
		}

		return clsName
	}
	
	// String image(Greeting ele) {
	// return "Greeting.gif";
	// }
}
