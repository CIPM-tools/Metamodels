module org.xtext.lua.GenerateLua

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*


var rootPath = ".."

Workflow {
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.xtext.lua"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = true
			}
			

		}
		language = StandardLanguage {
			name = "org.xtext.lua.Lua"
			
			fileExtensions = "lua"
			
			// from https://github.com/eclipse/xtext-core/issues/1518
			parserGenerator = parser.antlr.XtextAntlrGeneratorFragment2 {
  				options = {
  					backtrack = false
  				}
//  			// from https://blogs.itemis.com/en/debugging-xtext-grammars-what-to-do-when-your-language-is-ambiguous
				debugGrammar = true
      		}
			validator = {
				generateXtendStub = true
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
				composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
//				composedCheck = "org.eclipse.xtext.validation.ImportUriValidator"
			}

			junitSupport = {
				junitVersion = "5"
			}
			
			// serialization for EMF
			resourceFactoryFragment = resourceFactory.ResourceFactoryFragment2 { }

//      		qualifiedNamesProvider = {
//      		}
      		
//      		scopeProvider = {
//				generateXtendStub = true
//      		}
//
//      		labelProvider = {
//      			generateXtendStub = true
//      		}
//
//			serializer = {
//				generateXtendStub = true
//			}
//
//			generator = {
//				generateXtendStub = true
//			}
		


		}
	}
}
